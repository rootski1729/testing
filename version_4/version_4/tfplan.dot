digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_route53_record.api (expand)" [label = "aws_route53_record.api", shape = "box"]
		"[root] aws_route53_record.frontend (expand)" [label = "aws_route53_record.frontend", shape = "box"]
		"[root] aws_secretsmanager_secret.docdb (expand)" [label = "aws_secretsmanager_secret.docdb", shape = "box"]
		"[root] aws_secretsmanager_secret.rds (expand)" [label = "aws_secretsmanager_secret.rds", shape = "box"]
		"[root] aws_secretsmanager_secret_version.docdb (expand)" [label = "aws_secretsmanager_secret_version.docdb", shape = "box"]
		"[root] aws_secretsmanager_secret_version.rds (expand)" [label = "aws_secretsmanager_secret_version.rds", shape = "box"]
		"[root] data.aws_route53_zone.primary (expand)" [label = "data.aws_route53_zone.primary", shape = "box"]
		"[root] module.alb.aws_acm_certificate.this (expand)" [label = "module.alb.aws_acm_certificate.this", shape = "box"]
		"[root] module.alb.aws_acm_certificate_validation.this (expand)" [label = "module.alb.aws_acm_certificate_validation.this", shape = "box"]
		"[root] module.alb.aws_lb.this (expand)" [label = "module.alb.aws_lb.this", shape = "box"]
		"[root] module.alb.aws_lb_listener.http (expand)" [label = "module.alb.aws_lb_listener.http", shape = "box"]
		"[root] module.alb.aws_lb_listener.https (expand)" [label = "module.alb.aws_lb_listener.https", shape = "box"]
		"[root] module.alb.aws_lb_target_group.this (expand)" [label = "module.alb.aws_lb_target_group.this", shape = "box"]
		"[root] module.alb.aws_route53_record.cert_validation (expand)" [label = "module.alb.aws_route53_record.cert_validation", shape = "box"]
		"[root] module.alb.aws_security_group.this (expand)" [label = "module.alb.aws_security_group.this", shape = "box"]
		"[root] module.alb.data.aws_route53_zone.main (expand)" [label = "module.alb.data.aws_route53_zone.main", shape = "box"]
		"[root] module.compute.aws_cloudwatch_log_group.this (expand)" [label = "module.compute.aws_cloudwatch_log_group.this", shape = "box"]
		"[root] module.compute.aws_ecs_cluster.this (expand)" [label = "module.compute.aws_ecs_cluster.this", shape = "box"]
		"[root] module.compute.aws_ecs_service.this (expand)" [label = "module.compute.aws_ecs_service.this", shape = "box"]
		"[root] module.compute.aws_ecs_task_definition.this (expand)" [label = "module.compute.aws_ecs_task_definition.this", shape = "box"]
		"[root] module.compute.aws_iam_role.exec (expand)" [label = "module.compute.aws_iam_role.exec", shape = "box"]
		"[root] module.compute.aws_iam_role.task (expand)" [label = "module.compute.aws_iam_role.task", shape = "box"]
		"[root] module.compute.aws_iam_role_policy.secrets_policy (expand)" [label = "module.compute.aws_iam_role_policy.secrets_policy", shape = "box"]
		"[root] module.compute.aws_iam_role_policy_attachment.exec_default (expand)" [label = "module.compute.aws_iam_role_policy_attachment.exec_default", shape = "box"]
		"[root] module.compute.aws_security_group.this (expand)" [label = "module.compute.aws_security_group.this", shape = "box"]
		"[root] module.compute.data.aws_iam_policy_document.ecs_task_assume_role (expand)" [label = "module.compute.data.aws_iam_policy_document.ecs_task_assume_role", shape = "box"]
		"[root] module.compute.data.aws_iam_policy_document.logging (expand)" [label = "module.compute.data.aws_iam_policy_document.logging", shape = "box"]
		"[root] module.compute.data.aws_region.current (expand)" [label = "module.compute.data.aws_region.current", shape = "box"]
		"[root] module.docdb.aws_docdb_cluster.this (expand)" [label = "module.docdb.aws_docdb_cluster.this", shape = "box"]
		"[root] module.docdb.aws_docdb_cluster_instance.this (expand)" [label = "module.docdb.aws_docdb_cluster_instance.this", shape = "box"]
		"[root] module.docdb.aws_docdb_cluster_parameter_group.this (expand)" [label = "module.docdb.aws_docdb_cluster_parameter_group.this", shape = "box"]
		"[root] module.docdb.aws_docdb_subnet_group.this (expand)" [label = "module.docdb.aws_docdb_subnet_group.this", shape = "box"]
		"[root] module.docdb.aws_security_group.this (expand)" [label = "module.docdb.aws_security_group.this", shape = "box"]
		"[root] module.frontend.aws_acm_certificate.frontend (expand)" [label = "module.frontend.aws_acm_certificate.frontend", shape = "box"]
		"[root] module.frontend.aws_acm_certificate_validation.frontend (expand)" [label = "module.frontend.aws_acm_certificate_validation.frontend", shape = "box"]
		"[root] module.frontend.aws_cloudfront_distribution.this (expand)" [label = "module.frontend.aws_cloudfront_distribution.this", shape = "box"]
		"[root] module.frontend.aws_cloudfront_origin_access_control.this (expand)" [label = "module.frontend.aws_cloudfront_origin_access_control.this", shape = "box"]
		"[root] module.frontend.aws_route53_record.frontend_cert_validation (expand)" [label = "module.frontend.aws_route53_record.frontend_cert_validation", shape = "box"]
		"[root] module.frontend.aws_s3_bucket.this (expand)" [label = "module.frontend.aws_s3_bucket.this", shape = "box"]
		"[root] module.frontend.aws_s3_bucket_policy.this (expand)" [label = "module.frontend.aws_s3_bucket_policy.this", shape = "box"]
		"[root] module.frontend.aws_s3_bucket_public_access_block.this (expand)" [label = "module.frontend.aws_s3_bucket_public_access_block.this", shape = "box"]
		"[root] module.frontend.data.aws_iam_policy_document.s3_policy (expand)" [label = "module.frontend.data.aws_iam_policy_document.s3_policy", shape = "box"]
		"[root] module.frontend.data.aws_route53_zone.main (expand)" [label = "module.frontend.data.aws_route53_zone.main", shape = "box"]
		"[root] module.network.aws_eip.nat (expand)" [label = "module.network.aws_eip.nat", shape = "box"]
		"[root] module.network.aws_internet_gateway.igw (expand)" [label = "module.network.aws_internet_gateway.igw", shape = "box"]
		"[root] module.network.aws_nat_gateway.nat (expand)" [label = "module.network.aws_nat_gateway.nat", shape = "box"]
		"[root] module.network.aws_route.private_nat (expand)" [label = "module.network.aws_route.private_nat", shape = "box"]
		"[root] module.network.aws_route.public_internet (expand)" [label = "module.network.aws_route.public_internet", shape = "box"]
		"[root] module.network.aws_route_table.private (expand)" [label = "module.network.aws_route_table.private", shape = "box"]
		"[root] module.network.aws_route_table.public (expand)" [label = "module.network.aws_route_table.public", shape = "box"]
		"[root] module.network.aws_route_table_association.private (expand)" [label = "module.network.aws_route_table_association.private", shape = "box"]
		"[root] module.network.aws_route_table_association.public (expand)" [label = "module.network.aws_route_table_association.public", shape = "box"]
		"[root] module.network.aws_security_group.endpoints (expand)" [label = "module.network.aws_security_group.endpoints", shape = "box"]
		"[root] module.network.aws_subnet.private (expand)" [label = "module.network.aws_subnet.private", shape = "box"]
		"[root] module.network.aws_subnet.public (expand)" [label = "module.network.aws_subnet.public", shape = "box"]
		"[root] module.network.aws_vpc.this (expand)" [label = "module.network.aws_vpc.this", shape = "box"]
		"[root] module.network.aws_vpc_endpoint.interface (expand)" [label = "module.network.aws_vpc_endpoint.interface", shape = "box"]
		"[root] module.network.aws_vpc_endpoint.s3 (expand)" [label = "module.network.aws_vpc_endpoint.s3", shape = "box"]
		"[root] module.network.data.aws_availability_zones.available (expand)" [label = "module.network.data.aws_availability_zones.available", shape = "box"]
		"[root] module.network.data.aws_region.current (expand)" [label = "module.network.data.aws_region.current", shape = "box"]
		"[root] module.network.data.aws_subnets.private (expand)" [label = "module.network.data.aws_subnets.private", shape = "box"]
		"[root] module.network.data.aws_subnets.public (expand)" [label = "module.network.data.aws_subnets.public", shape = "box"]
		"[root] module.network.data.aws_vpc.shared (expand)" [label = "module.network.data.aws_vpc.shared", shape = "box"]
		"[root] module.rds.aws_db_instance.this (expand)" [label = "module.rds.aws_db_instance.this", shape = "box"]
		"[root] module.rds.aws_db_subnet_group.this (expand)" [label = "module.rds.aws_db_subnet_group.this", shape = "box"]
		"[root] module.rds.aws_security_group.this (expand)" [label = "module.rds.aws_security_group.this", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].us_east_1" [label = "provider[\"registry.terraform.io/hashicorp/aws\"].us_east_1", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/random\"]" [label = "provider[\"registry.terraform.io/hashicorp/random\"]", shape = "diamond"]
		"[root] random_integer.cidr (expand)" [label = "random_integer.cidr", shape = "box"]
		"[root] random_password.docdb (expand)" [label = "random_password.docdb", shape = "box"]
		"[root] random_password.rds (expand)" [label = "random_password.rds", shape = "box"]
		"[root] random_string.bucket_suffix (expand)" [label = "random_string.bucket_suffix", shape = "box"]
		"[root] var.acm_certificate_arn" [label = "var.acm_certificate_arn", shape = "note"]
		"[root] var.api_container_image" [label = "var.api_container_image", shape = "note"]
		"[root] var.aws_region" [label = "var.aws_region", shape = "note"]
		"[root] var.client_name" [label = "var.client_name", shape = "note"]
		"[root] var.env" [label = "var.env", shape = "note"]
		"[root] var.frontend_bucket_name" [label = "var.frontend_bucket_name", shape = "note"]
		"[root] var.plan" [label = "var.plan", shape = "note"]
		"[root] var.saas_api_lb_dns_name" [label = "var.saas_api_lb_dns_name", shape = "note"]
		"[root] var.saas_api_lb_zone_id" [label = "var.saas_api_lb_zone_id", shape = "note"]
		"[root] var.saas_documentdb_uri" [label = "var.saas_documentdb_uri", shape = "note"]
		"[root] var.saas_rds_endpoint" [label = "var.saas_rds_endpoint", shape = "note"]
		"[root] var.subdomain" [label = "var.subdomain", shape = "note"]
		"[root] var.tags" [label = "var.tags", shape = "note"]
		"[root] aws_route53_record.api (expand)" -> "[root] data.aws_route53_zone.primary (expand)"
		"[root] aws_route53_record.api (expand)" -> "[root] module.alb (close)"
		"[root] aws_route53_record.api (expand)" -> "[root] var.saas_api_lb_dns_name"
		"[root] aws_route53_record.api (expand)" -> "[root] var.saas_api_lb_zone_id"
		"[root] aws_route53_record.frontend (expand)" -> "[root] data.aws_route53_zone.primary (expand)"
		"[root] aws_route53_record.frontend (expand)" -> "[root] module.frontend.output.domain_name (expand)"
		"[root] aws_secretsmanager_secret.docdb (expand)" -> "[root] local.base_tags (expand)"
		"[root] aws_secretsmanager_secret.docdb (expand)" -> "[root] local.client_lower (expand)"
		"[root] aws_secretsmanager_secret.docdb (expand)" -> "[root] local.is_prod (expand)"
		"[root] aws_secretsmanager_secret.docdb (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_secretsmanager_secret.rds (expand)" -> "[root] local.base_tags (expand)"
		"[root] aws_secretsmanager_secret.rds (expand)" -> "[root] local.client_lower (expand)"
		"[root] aws_secretsmanager_secret.rds (expand)" -> "[root] local.is_prod (expand)"
		"[root] aws_secretsmanager_secret.rds (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_secretsmanager_secret_version.docdb (expand)" -> "[root] aws_secretsmanager_secret.docdb (expand)"
		"[root] aws_secretsmanager_secret_version.docdb (expand)" -> "[root] random_password.docdb (expand)"
		"[root] aws_secretsmanager_secret_version.rds (expand)" -> "[root] aws_secretsmanager_secret.rds (expand)"
		"[root] aws_secretsmanager_secret_version.rds (expand)" -> "[root] random_password.rds (expand)"
		"[root] data.aws_route53_zone.primary (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] local.api_fqdn (expand)" -> "[root] var.subdomain"
		"[root] local.base_tags (expand)" -> "[root] var.client_name"
		"[root] local.base_tags (expand)" -> "[root] var.env (validation)"
		"[root] local.base_tags (expand)" -> "[root] var.plan (validation)"
		"[root] local.base_tags (expand)" -> "[root] var.tags"
		"[root] local.client_lower (expand)" -> "[root] var.client_name"
		"[root] local.create_compute (expand)" -> "[root] var.client_name"
		"[root] local.create_compute (expand)" -> "[root] var.plan (validation)"
		"[root] local.create_docdb (expand)" -> "[root] var.client_name"
		"[root] local.create_docdb (expand)" -> "[root] var.plan (validation)"
		"[root] local.create_new_vpc (expand)" -> "[root] var.client_name"
		"[root] local.create_new_vpc (expand)" -> "[root] var.plan (validation)"
		"[root] local.create_rds (expand)" -> "[root] var.client_name"
		"[root] local.create_rds (expand)" -> "[root] var.plan (validation)"
		"[root] local.fqdn (expand)" -> "[root] local.frontend_fqdn (expand)"
		"[root] local.frontend_fqdn (expand)" -> "[root] var.subdomain"
		"[root] local.is_prod (expand)" -> "[root] var.env (validation)"
		"[root] local.name_prefix (expand)" -> "[root] local.client_lower (expand)"
		"[root] local.name_prefix (expand)" -> "[root] var.env (validation)"
		"[root] local.name_prefix (expand)" -> "[root] var.plan (validation)"
		"[root] module.alb (close)" -> "[root] module.alb.aws_lb_listener.http (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.aws_lb_listener.https (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.lb_dns_name (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.lb_zone_id (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.security_group_id (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.target_group_arn (expand)"
		"[root] module.alb (expand)" -> "[root] local.create_compute (expand)"
		"[root] module.alb.aws_acm_certificate.this (expand)" -> "[root] module.alb.var.certificate_arn (expand)"
		"[root] module.alb.aws_acm_certificate.this (expand)" -> "[root] module.alb.var.domain_name (expand)"
		"[root] module.alb.aws_acm_certificate.this (expand)" -> "[root] module.alb.var.tags (expand)"
		"[root] module.alb.aws_acm_certificate.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.alb.aws_acm_certificate_validation.this (expand)" -> "[root] module.alb.aws_route53_record.cert_validation (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.aws_security_group.this (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.subnets (expand)"
		"[root] module.alb.aws_lb_listener.http (expand)" -> "[root] module.alb.aws_lb.this (expand)"
		"[root] module.alb.aws_lb_listener.https (expand)" -> "[root] module.alb.aws_acm_certificate_validation.this (expand)"
		"[root] module.alb.aws_lb_listener.https (expand)" -> "[root] module.alb.aws_lb.this (expand)"
		"[root] module.alb.aws_lb_listener.https (expand)" -> "[root] module.alb.aws_lb_target_group.this (expand)"
		"[root] module.alb.aws_lb_listener.https (expand)" -> "[root] module.alb.local.certificate_arn (expand)"
		"[root] module.alb.aws_lb_target_group.this (expand)" -> "[root] module.alb.var.name (expand)"
		"[root] module.alb.aws_lb_target_group.this (expand)" -> "[root] module.alb.var.tags (expand)"
		"[root] module.alb.aws_lb_target_group.this (expand)" -> "[root] module.alb.var.vpc_id (expand)"
		"[root] module.alb.aws_route53_record.cert_validation (expand)" -> "[root] module.alb.aws_acm_certificate.this (expand)"
		"[root] module.alb.aws_route53_record.cert_validation (expand)" -> "[root] module.alb.data.aws_route53_zone.main (expand)"
		"[root] module.alb.aws_security_group.this (expand)" -> "[root] module.alb.var.name (expand)"
		"[root] module.alb.aws_security_group.this (expand)" -> "[root] module.alb.var.tags (expand)"
		"[root] module.alb.aws_security_group.this (expand)" -> "[root] module.alb.var.vpc_id (expand)"
		"[root] module.alb.data.aws_route53_zone.main (expand)" -> "[root] module.alb.var.domain_name (expand)"
		"[root] module.alb.data.aws_route53_zone.main (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.alb.local.certificate_arn (expand)" -> "[root] module.alb.aws_acm_certificate.this (expand)"
		"[root] module.alb.output.lb_dns_name (expand)" -> "[root] module.alb.aws_lb.this (expand)"
		"[root] module.alb.output.lb_zone_id (expand)" -> "[root] module.alb.aws_lb.this (expand)"
		"[root] module.alb.output.security_group_id (expand)" -> "[root] module.alb.aws_security_group.this (expand)"
		"[root] module.alb.output.target_group_arn (expand)" -> "[root] module.alb.aws_lb_target_group.this (expand)"
		"[root] module.alb.var.certificate_arn (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.certificate_arn (expand)" -> "[root] var.acm_certificate_arn"
		"[root] module.alb.var.domain_name (expand)" -> "[root] local.api_fqdn (expand)"
		"[root] module.alb.var.domain_name (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.name (expand)" -> "[root] local.name_prefix (expand)"
		"[root] module.alb.var.name (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.subnets (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.subnets (expand)" -> "[root] module.network.output.public_subnet_ids (expand)"
		"[root] module.alb.var.tags (expand)" -> "[root] local.base_tags (expand)"
		"[root] module.alb.var.tags (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.vpc_id (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.vpc_id (expand)" -> "[root] module.network.output.vpc_id (expand)"
		"[root] module.compute (close)" -> "[root] module.compute.aws_iam_role_policy.secrets_policy (expand)"
		"[root] module.compute (close)" -> "[root] module.compute.aws_iam_role_policy_attachment.exec_default (expand)"
		"[root] module.compute (close)" -> "[root] module.compute.data.aws_iam_policy_document.logging (expand)"
		"[root] module.compute (close)" -> "[root] module.compute.output.cluster_id (expand)"
		"[root] module.compute (close)" -> "[root] module.compute.output.service_name (expand)"
		"[root] module.compute (close)" -> "[root] module.compute.var.secrets_prefix (expand)"
		"[root] module.compute (expand)" -> "[root] local.create_compute (expand)"
		"[root] module.compute.aws_cloudwatch_log_group.this (expand)" -> "[root] module.compute.var.cluster_name (expand)"
		"[root] module.compute.aws_cloudwatch_log_group.this (expand)" -> "[root] module.compute.var.tags (expand)"
		"[root] module.compute.aws_cloudwatch_log_group.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.compute.aws_ecs_cluster.this (expand)" -> "[root] module.compute.var.cluster_name (expand)"
		"[root] module.compute.aws_ecs_cluster.this (expand)" -> "[root] module.compute.var.tags (expand)"
		"[root] module.compute.aws_ecs_cluster.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.compute.aws_ecs_service.this (expand)" -> "[root] module.compute.aws_cloudwatch_log_group.this (expand)"
		"[root] module.compute.aws_ecs_service.this (expand)" -> "[root] module.compute.aws_ecs_cluster.this (expand)"
		"[root] module.compute.aws_ecs_service.this (expand)" -> "[root] module.compute.aws_ecs_task_definition.this (expand)"
		"[root] module.compute.aws_ecs_service.this (expand)" -> "[root] module.compute.var.alb_target_group (expand)"
		"[root] module.compute.aws_ecs_service.this (expand)" -> "[root] module.compute.var.desired_count (expand)"
		"[root] module.compute.aws_ecs_service.this (expand)" -> "[root] module.compute.var.subnets (expand)"
		"[root] module.compute.aws_ecs_task_definition.this (expand)" -> "[root] module.compute.aws_iam_role.exec (expand)"
		"[root] module.compute.aws_ecs_task_definition.this (expand)" -> "[root] module.compute.aws_iam_role.task (expand)"
		"[root] module.compute.aws_ecs_task_definition.this (expand)" -> "[root] module.compute.data.aws_region.current (expand)"
		"[root] module.compute.aws_ecs_task_definition.this (expand)" -> "[root] module.compute.var.docdb_secret_arn (expand)"
		"[root] module.compute.aws_ecs_task_definition.this (expand)" -> "[root] module.compute.var.documentdb_uri (expand)"
		"[root] module.compute.aws_ecs_task_definition.this (expand)" -> "[root] module.compute.var.image (expand)"
		"[root] module.compute.aws_ecs_task_definition.this (expand)" -> "[root] module.compute.var.rds_endpoint (expand)"
		"[root] module.compute.aws_ecs_task_definition.this (expand)" -> "[root] module.compute.var.rds_secret_arn (expand)"
		"[root] module.compute.aws_iam_role.exec (expand)" -> "[root] module.compute.data.aws_iam_policy_document.ecs_task_assume_role (expand)"
		"[root] module.compute.aws_iam_role.exec (expand)" -> "[root] module.compute.local.execution_role_name (expand)"
		"[root] module.compute.aws_iam_role.exec (expand)" -> "[root] module.compute.var.tags (expand)"
		"[root] module.compute.aws_iam_role.task (expand)" -> "[root] module.compute.data.aws_iam_policy_document.ecs_task_assume_role (expand)"
		"[root] module.compute.aws_iam_role.task (expand)" -> "[root] module.compute.local.task_role_name (expand)"
		"[root] module.compute.aws_iam_role.task (expand)" -> "[root] module.compute.var.tags (expand)"
		"[root] module.compute.aws_iam_role_policy.secrets_policy (expand)" -> "[root] module.compute.aws_iam_role.exec (expand)"
		"[root] module.compute.aws_iam_role_policy.secrets_policy (expand)" -> "[root] module.compute.local.policy_resources (expand)"
		"[root] module.compute.aws_iam_role_policy_attachment.exec_default (expand)" -> "[root] module.compute.aws_iam_role.exec (expand)"
		"[root] module.compute.aws_security_group.this (expand)" -> "[root] module.compute.var.alb_security_group_id (expand)"
		"[root] module.compute.aws_security_group.this (expand)" -> "[root] module.compute.var.cluster_name (expand)"
		"[root] module.compute.aws_security_group.this (expand)" -> "[root] module.compute.var.container_port (expand)"
		"[root] module.compute.aws_security_group.this (expand)" -> "[root] module.compute.var.tags (expand)"
		"[root] module.compute.aws_security_group.this (expand)" -> "[root] module.compute.var.vpc_id (expand)"
		"[root] module.compute.data.aws_iam_policy_document.ecs_task_assume_role (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.data.aws_iam_policy_document.ecs_task_assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.compute.data.aws_iam_policy_document.logging (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.data.aws_iam_policy_document.logging (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.compute.data.aws_region.current (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.data.aws_region.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.compute.local.execution_role_name (expand)" -> "[root] module.compute.var.cluster_name (expand)"
		"[root] module.compute.local.policy_resources (expand)" -> "[root] module.compute.local.secret_arns (expand)"
		"[root] module.compute.local.secret_arns (expand)" -> "[root] module.compute.var.docdb_secret_arn (expand)"
		"[root] module.compute.local.secret_arns (expand)" -> "[root] module.compute.var.rds_secret_arn (expand)"
		"[root] module.compute.local.task_role_name (expand)" -> "[root] module.compute.var.cluster_name (expand)"
		"[root] module.compute.output.cluster_id (expand)" -> "[root] module.compute.aws_ecs_cluster.this (expand)"
		"[root] module.compute.output.security_group_id (expand)" -> "[root] module.compute.aws_security_group.this (expand)"
		"[root] module.compute.output.service_name (expand)" -> "[root] module.compute.aws_ecs_service.this (expand)"
		"[root] module.compute.var.alb_security_group_id (expand)" -> "[root] module.alb.output.security_group_id (expand)"
		"[root] module.compute.var.alb_security_group_id (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.alb_target_group (expand)" -> "[root] module.alb.output.target_group_arn (expand)"
		"[root] module.compute.var.alb_target_group (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.cluster_name (expand)" -> "[root] local.name_prefix (expand)"
		"[root] module.compute.var.cluster_name (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.container_port (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.desired_count (expand)" -> "[root] local.is_prod (expand)"
		"[root] module.compute.var.desired_count (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.docdb_secret_arn (expand)" -> "[root] aws_secretsmanager_secret.docdb (expand)"
		"[root] module.compute.var.docdb_secret_arn (expand)" -> "[root] local.create_docdb (expand)"
		"[root] module.compute.var.docdb_secret_arn (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.documentdb_uri (expand)" -> "[root] module.docdb.output.connection_uri (expand)"
		"[root] module.compute.var.documentdb_uri (expand)" -> "[root] var.saas_documentdb_uri"
		"[root] module.compute.var.image (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.image (expand)" -> "[root] var.api_container_image"
		"[root] module.compute.var.rds_endpoint (expand)" -> "[root] module.rds.output.endpoint (expand)"
		"[root] module.compute.var.rds_endpoint (expand)" -> "[root] var.saas_rds_endpoint"
		"[root] module.compute.var.rds_secret_arn (expand)" -> "[root] aws_secretsmanager_secret.rds (expand)"
		"[root] module.compute.var.rds_secret_arn (expand)" -> "[root] local.create_rds (expand)"
		"[root] module.compute.var.rds_secret_arn (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.secrets_prefix (expand)" -> "[root] local.client_lower (expand)"
		"[root] module.compute.var.secrets_prefix (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.secrets_prefix (expand)" -> "[root] var.env (validation)"
		"[root] module.compute.var.subnets (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.subnets (expand)" -> "[root] module.network.output.private_subnet_ids (expand)"
		"[root] module.compute.var.tags (expand)" -> "[root] local.base_tags (expand)"
		"[root] module.compute.var.tags (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.vpc_id (expand)" -> "[root] module.compute (expand)"
		"[root] module.compute.var.vpc_id (expand)" -> "[root] module.network.output.vpc_id (expand)"
		"[root] module.docdb (close)" -> "[root] module.docdb.aws_docdb_cluster_instance.this (expand)"
		"[root] module.docdb (close)" -> "[root] module.docdb.output.connection_uri (expand)"
		"[root] module.docdb (close)" -> "[root] module.docdb.output.endpoint (expand)"
		"[root] module.docdb (close)" -> "[root] module.docdb.output.password (expand)"
		"[root] module.docdb (close)" -> "[root] module.docdb.output.port (expand)"
		"[root] module.docdb (close)" -> "[root] module.docdb.output.username (expand)"
		"[root] module.docdb (expand)" -> "[root] local.create_docdb (expand)"
		"[root] module.docdb.aws_docdb_cluster.this (expand)" -> "[root] module.docdb.aws_docdb_cluster_parameter_group.this (expand)"
		"[root] module.docdb.aws_docdb_cluster.this (expand)" -> "[root] module.docdb.aws_docdb_subnet_group.this (expand)"
		"[root] module.docdb.aws_docdb_cluster.this (expand)" -> "[root] module.docdb.aws_security_group.this (expand)"
		"[root] module.docdb.aws_docdb_cluster.this (expand)" -> "[root] module.docdb.var.backup_retention_period (expand)"
		"[root] module.docdb.aws_docdb_cluster.this (expand)" -> "[root] module.docdb.var.deletion_protection (expand)"
		"[root] module.docdb.aws_docdb_cluster.this (expand)" -> "[root] module.docdb.var.password (expand)"
		"[root] module.docdb.aws_docdb_cluster.this (expand)" -> "[root] module.docdb.var.skip_final_snapshot (expand)"
		"[root] module.docdb.aws_docdb_cluster.this (expand)" -> "[root] module.docdb.var.username (expand)"
		"[root] module.docdb.aws_docdb_cluster_instance.this (expand)" -> "[root] module.docdb.aws_docdb_cluster.this (expand)"
		"[root] module.docdb.aws_docdb_cluster_instance.this (expand)" -> "[root] module.docdb.var.instance_class (expand)"
		"[root] module.docdb.aws_docdb_cluster_instance.this (expand)" -> "[root] module.docdb.var.instance_count (expand)"
		"[root] module.docdb.aws_docdb_cluster_parameter_group.this (expand)" -> "[root] module.docdb.var.cluster_identifier (expand)"
		"[root] module.docdb.aws_docdb_cluster_parameter_group.this (expand)" -> "[root] module.docdb.var.tags (expand)"
		"[root] module.docdb.aws_docdb_cluster_parameter_group.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.docdb.aws_docdb_subnet_group.this (expand)" -> "[root] module.docdb.var.cluster_identifier (expand)"
		"[root] module.docdb.aws_docdb_subnet_group.this (expand)" -> "[root] module.docdb.var.subnet_ids (expand)"
		"[root] module.docdb.aws_docdb_subnet_group.this (expand)" -> "[root] module.docdb.var.tags (expand)"
		"[root] module.docdb.aws_security_group.this (expand)" -> "[root] module.docdb.var.allowed_security_group_ids (expand)"
		"[root] module.docdb.aws_security_group.this (expand)" -> "[root] module.docdb.var.cluster_identifier (expand)"
		"[root] module.docdb.aws_security_group.this (expand)" -> "[root] module.docdb.var.tags (expand)"
		"[root] module.docdb.aws_security_group.this (expand)" -> "[root] module.docdb.var.vpc_id (expand)"
		"[root] module.docdb.local.connection_uri (expand)" -> "[root] module.docdb.aws_docdb_cluster.this (expand)"
		"[root] module.docdb.local.endpoint (expand)" -> "[root] module.docdb.aws_docdb_cluster.this (expand)"
		"[root] module.docdb.local.password (expand)" -> "[root] module.docdb.var.password (expand)"
		"[root] module.docdb.local.port (expand)" -> "[root] module.docdb.aws_docdb_cluster.this (expand)"
		"[root] module.docdb.local.username (expand)" -> "[root] module.docdb.var.username (expand)"
		"[root] module.docdb.output.connection_uri (expand)" -> "[root] module.docdb.local.connection_uri (expand)"
		"[root] module.docdb.output.endpoint (expand)" -> "[root] module.docdb.local.endpoint (expand)"
		"[root] module.docdb.output.password (expand)" -> "[root] module.docdb.local.password (expand)"
		"[root] module.docdb.output.port (expand)" -> "[root] module.docdb.local.port (expand)"
		"[root] module.docdb.output.username (expand)" -> "[root] module.docdb.local.username (expand)"
		"[root] module.docdb.var.allowed_security_group_ids (expand)" -> "[root] module.compute.output.security_group_id (expand)"
		"[root] module.docdb.var.allowed_security_group_ids (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.backup_retention_period (expand)" -> "[root] local.is_prod (expand)"
		"[root] module.docdb.var.backup_retention_period (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.cluster_identifier (expand)" -> "[root] local.name_prefix (expand)"
		"[root] module.docdb.var.cluster_identifier (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.deletion_protection (expand)" -> "[root] local.is_prod (expand)"
		"[root] module.docdb.var.deletion_protection (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.instance_class (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.instance_count (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.password (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.password (expand)" -> "[root] random_password.docdb (expand)"
		"[root] module.docdb.var.skip_final_snapshot (expand)" -> "[root] local.is_prod (expand)"
		"[root] module.docdb.var.skip_final_snapshot (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.subnet_ids (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.subnet_ids (expand)" -> "[root] module.network.output.private_subnet_ids (expand)"
		"[root] module.docdb.var.tags (expand)" -> "[root] local.base_tags (expand)"
		"[root] module.docdb.var.tags (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.username (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.vpc_id (expand)" -> "[root] module.docdb (expand)"
		"[root] module.docdb.var.vpc_id (expand)" -> "[root] module.network.output.vpc_id (expand)"
		"[root] module.frontend (close)" -> "[root] module.frontend.aws_s3_bucket_policy.this (expand)"
		"[root] module.frontend (close)" -> "[root] module.frontend.aws_s3_bucket_public_access_block.this (expand)"
		"[root] module.frontend (close)" -> "[root] module.frontend.output.distribution_id (expand)"
		"[root] module.frontend (close)" -> "[root] module.frontend.output.domain_name (expand)"
		"[root] module.frontend (close)" -> "[root] module.frontend.output.s3_bucket (expand)"
		"[root] module.frontend.aws_acm_certificate.frontend (expand)" -> "[root] module.frontend.var.acm_certificate_arn (expand)"
		"[root] module.frontend.aws_acm_certificate.frontend (expand)" -> "[root] module.frontend.var.domain_name (expand)"
		"[root] module.frontend.aws_acm_certificate.frontend (expand)" -> "[root] module.frontend.var.tags (expand)"
		"[root] module.frontend.aws_acm_certificate.frontend (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].us_east_1"
		"[root] module.frontend.aws_acm_certificate_validation.frontend (expand)" -> "[root] module.frontend.aws_route53_record.frontend_cert_validation (expand)"
		"[root] module.frontend.aws_cloudfront_distribution.this (expand)" -> "[root] module.frontend.aws_acm_certificate_validation.frontend (expand)"
		"[root] module.frontend.aws_cloudfront_distribution.this (expand)" -> "[root] module.frontend.aws_cloudfront_origin_access_control.this (expand)"
		"[root] module.frontend.aws_cloudfront_distribution.this (expand)" -> "[root] module.frontend.aws_s3_bucket.this (expand)"
		"[root] module.frontend.aws_cloudfront_distribution.this (expand)" -> "[root] module.frontend.local.frontend_certificate_arn (expand)"
		"[root] module.frontend.aws_cloudfront_origin_access_control.this (expand)" -> "[root] module.frontend.var.bucket_name (expand)"
		"[root] module.frontend.aws_cloudfront_origin_access_control.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.frontend.aws_route53_record.frontend_cert_validation (expand)" -> "[root] module.frontend.aws_acm_certificate.frontend (expand)"
		"[root] module.frontend.aws_route53_record.frontend_cert_validation (expand)" -> "[root] module.frontend.data.aws_route53_zone.main (expand)"
		"[root] module.frontend.aws_s3_bucket.this (expand)" -> "[root] module.frontend.var.bucket_name (expand)"
		"[root] module.frontend.aws_s3_bucket.this (expand)" -> "[root] module.frontend.var.tags (expand)"
		"[root] module.frontend.aws_s3_bucket.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.frontend.aws_s3_bucket_policy.this (expand)" -> "[root] module.frontend.data.aws_iam_policy_document.s3_policy (expand)"
		"[root] module.frontend.aws_s3_bucket_public_access_block.this (expand)" -> "[root] module.frontend.aws_s3_bucket.this (expand)"
		"[root] module.frontend.data.aws_iam_policy_document.s3_policy (expand)" -> "[root] module.frontend.aws_cloudfront_distribution.this (expand)"
		"[root] module.frontend.data.aws_route53_zone.main (expand)" -> "[root] module.frontend.var.domain_name (expand)"
		"[root] module.frontend.data.aws_route53_zone.main (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.frontend.local.frontend_certificate_arn (expand)" -> "[root] module.frontend.aws_acm_certificate.frontend (expand)"
		"[root] module.frontend.output.distribution_id (expand)" -> "[root] module.frontend.aws_cloudfront_distribution.this (expand)"
		"[root] module.frontend.output.domain_name (expand)" -> "[root] module.frontend.aws_cloudfront_distribution.this (expand)"
		"[root] module.frontend.output.s3_bucket (expand)" -> "[root] module.frontend.aws_s3_bucket.this (expand)"
		"[root] module.frontend.var.acm_certificate_arn (expand)" -> "[root] module.frontend (expand)"
		"[root] module.frontend.var.acm_certificate_arn (expand)" -> "[root] var.acm_certificate_arn"
		"[root] module.frontend.var.bucket_name (expand)" -> "[root] local.name_prefix (expand)"
		"[root] module.frontend.var.bucket_name (expand)" -> "[root] module.frontend (expand)"
		"[root] module.frontend.var.bucket_name (expand)" -> "[root] random_string.bucket_suffix (expand)"
		"[root] module.frontend.var.bucket_name (expand)" -> "[root] var.frontend_bucket_name"
		"[root] module.frontend.var.domain_name (expand)" -> "[root] local.frontend_fqdn (expand)"
		"[root] module.frontend.var.domain_name (expand)" -> "[root] module.frontend (expand)"
		"[root] module.frontend.var.tags (expand)" -> "[root] local.base_tags (expand)"
		"[root] module.frontend.var.tags (expand)" -> "[root] module.frontend (expand)"
		"[root] module.network (close)" -> "[root] module.network.aws_route.private_nat (expand)"
		"[root] module.network (close)" -> "[root] module.network.aws_route.public_internet (expand)"
		"[root] module.network (close)" -> "[root] module.network.aws_route_table_association.private (expand)"
		"[root] module.network (close)" -> "[root] module.network.aws_route_table_association.public (expand)"
		"[root] module.network (close)" -> "[root] module.network.aws_vpc_endpoint.interface (expand)"
		"[root] module.network (close)" -> "[root] module.network.aws_vpc_endpoint.s3 (expand)"
		"[root] module.network (close)" -> "[root] module.network.local.use_existing (expand)"
		"[root] module.network (close)" -> "[root] module.network.output.nat_gateway_ids (expand)"
		"[root] module.network (close)" -> "[root] module.network.output.private_subnet_ids (expand)"
		"[root] module.network (close)" -> "[root] module.network.output.public_subnet_ids (expand)"
		"[root] module.network (close)" -> "[root] module.network.output.vpc_id (expand)"
		"[root] module.network.aws_eip.nat (expand)" -> "[root] module.network.var.az_count (expand)"
		"[root] module.network.aws_eip.nat (expand)" -> "[root] module.network.var.create_vpc (expand)"
		"[root] module.network.aws_eip.nat (expand)" -> "[root] module.network.var.single_nat_gateway (expand)"
		"[root] module.network.aws_eip.nat (expand)" -> "[root] module.network.var.tags (expand)"
		"[root] module.network.aws_eip.nat (expand)" -> "[root] module.network.var.vpc_name (expand)"
		"[root] module.network.aws_eip.nat (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.network.aws_internet_gateway.igw (expand)" -> "[root] module.network.local.vpc_id (expand)"
		"[root] module.network.aws_nat_gateway.nat (expand)" -> "[root] module.network.aws_eip.nat (expand)"
		"[root] module.network.aws_nat_gateway.nat (expand)" -> "[root] module.network.aws_internet_gateway.igw (expand)"
		"[root] module.network.aws_nat_gateway.nat (expand)" -> "[root] module.network.aws_subnet.public (expand)"
		"[root] module.network.aws_route.private_nat (expand)" -> "[root] module.network.aws_nat_gateway.nat (expand)"
		"[root] module.network.aws_route.private_nat (expand)" -> "[root] module.network.aws_route_table.private (expand)"
		"[root] module.network.aws_route.public_internet (expand)" -> "[root] module.network.aws_internet_gateway.igw (expand)"
		"[root] module.network.aws_route.public_internet (expand)" -> "[root] module.network.aws_route_table.public (expand)"
		"[root] module.network.aws_route_table.private (expand)" -> "[root] module.network.local.vpc_id (expand)"
		"[root] module.network.aws_route_table.private (expand)" -> "[root] module.network.var.az_count (expand)"
		"[root] module.network.aws_route_table.private (expand)" -> "[root] module.network.var.single_nat_gateway (expand)"
		"[root] module.network.aws_route_table.public (expand)" -> "[root] module.network.local.vpc_id (expand)"
		"[root] module.network.aws_route_table_association.private (expand)" -> "[root] module.network.aws_route_table.private (expand)"
		"[root] module.network.aws_route_table_association.private (expand)" -> "[root] module.network.aws_subnet.private (expand)"
		"[root] module.network.aws_route_table_association.public (expand)" -> "[root] module.network.aws_route_table.public (expand)"
		"[root] module.network.aws_route_table_association.public (expand)" -> "[root] module.network.aws_subnet.public (expand)"
		"[root] module.network.aws_security_group.endpoints (expand)" -> "[root] module.network.local.vpc_id (expand)"
		"[root] module.network.aws_security_group.endpoints (expand)" -> "[root] module.network.var.enable_endpoints (expand)"
		"[root] module.network.aws_subnet.private (expand)" -> "[root] module.network.local.azs (expand)"
		"[root] module.network.aws_subnet.private (expand)" -> "[root] module.network.local.vpc_id (expand)"
		"[root] module.network.aws_subnet.private (expand)" -> "[root] module.network.var.private_subnet_cidrs (expand)"
		"[root] module.network.aws_subnet.public (expand)" -> "[root] module.network.local.azs (expand)"
		"[root] module.network.aws_subnet.public (expand)" -> "[root] module.network.local.vpc_id (expand)"
		"[root] module.network.aws_subnet.public (expand)" -> "[root] module.network.var.public_subnet_cidrs (expand)"
		"[root] module.network.aws_vpc.this (expand)" -> "[root] module.network.var.create_vpc (expand)"
		"[root] module.network.aws_vpc.this (expand)" -> "[root] module.network.var.tags (expand)"
		"[root] module.network.aws_vpc.this (expand)" -> "[root] module.network.var.vpc_cidr (expand)"
		"[root] module.network.aws_vpc.this (expand)" -> "[root] module.network.var.vpc_name (expand)"
		"[root] module.network.aws_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.network.aws_vpc_endpoint.interface (expand)" -> "[root] module.network.aws_security_group.endpoints (expand)"
		"[root] module.network.aws_vpc_endpoint.interface (expand)" -> "[root] module.network.aws_subnet.private (expand)"
		"[root] module.network.aws_vpc_endpoint.interface (expand)" -> "[root] module.network.data.aws_region.current (expand)"
		"[root] module.network.aws_vpc_endpoint.interface (expand)" -> "[root] module.network.local.interface_services (expand)"
		"[root] module.network.aws_vpc_endpoint.s3 (expand)" -> "[root] module.network.aws_route_table.private (expand)"
		"[root] module.network.aws_vpc_endpoint.s3 (expand)" -> "[root] module.network.data.aws_region.current (expand)"
		"[root] module.network.aws_vpc_endpoint.s3 (expand)" -> "[root] module.network.var.enable_endpoints (expand)"
		"[root] module.network.data.aws_availability_zones.available (expand)" -> "[root] module.network (expand)"
		"[root] module.network.data.aws_availability_zones.available (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.network.data.aws_region.current (expand)" -> "[root] module.network (expand)"
		"[root] module.network.data.aws_region.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.network.data.aws_subnets.private (expand)" -> "[root] module.network.local.vpc_id (expand)"
		"[root] module.network.data.aws_subnets.public (expand)" -> "[root] module.network.local.vpc_id (expand)"
		"[root] module.network.data.aws_vpc.shared (expand)" -> "[root] module.network.var.create_vpc (expand)"
		"[root] module.network.data.aws_vpc.shared (expand)" -> "[root] module.network.var.tags (expand)"
		"[root] module.network.data.aws_vpc.shared (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.network.local.azs (expand)" -> "[root] module.network.data.aws_availability_zones.available (expand)"
		"[root] module.network.local.azs (expand)" -> "[root] module.network.var.az_count (expand)"
		"[root] module.network.local.interface_services (expand)" -> "[root] module.network (expand)"
		"[root] module.network.local.use_existing (expand)" -> "[root] module.network.var.create_vpc (expand)"
		"[root] module.network.local.vpc_id (expand)" -> "[root] module.network.aws_vpc.this (expand)"
		"[root] module.network.local.vpc_id (expand)" -> "[root] module.network.data.aws_vpc.shared (expand)"
		"[root] module.network.output.nat_gateway_ids (expand)" -> "[root] module.network.aws_nat_gateway.nat (expand)"
		"[root] module.network.output.private_subnet_ids (expand)" -> "[root] module.network.aws_subnet.private (expand)"
		"[root] module.network.output.private_subnet_ids (expand)" -> "[root] module.network.data.aws_subnets.private (expand)"
		"[root] module.network.output.public_subnet_ids (expand)" -> "[root] module.network.aws_subnet.public (expand)"
		"[root] module.network.output.public_subnet_ids (expand)" -> "[root] module.network.data.aws_subnets.public (expand)"
		"[root] module.network.output.vpc_id (expand)" -> "[root] module.network.local.vpc_id (expand)"
		"[root] module.network.var.az_count (expand)" -> "[root] module.network (expand)"
		"[root] module.network.var.create_vpc (expand)" -> "[root] local.create_new_vpc (expand)"
		"[root] module.network.var.create_vpc (expand)" -> "[root] module.network (expand)"
		"[root] module.network.var.enable_endpoints (expand)" -> "[root] module.network (expand)"
		"[root] module.network.var.private_subnet_cidrs (expand)" -> "[root] module.network (expand)"
		"[root] module.network.var.private_subnet_cidrs (expand)" -> "[root] random_integer.cidr (expand)"
		"[root] module.network.var.public_subnet_cidrs (expand)" -> "[root] module.network (expand)"
		"[root] module.network.var.public_subnet_cidrs (expand)" -> "[root] random_integer.cidr (expand)"
		"[root] module.network.var.single_nat_gateway (expand)" -> "[root] module.network (expand)"
		"[root] module.network.var.tags (expand)" -> "[root] local.base_tags (expand)"
		"[root] module.network.var.tags (expand)" -> "[root] module.network (expand)"
		"[root] module.network.var.vpc_cidr (expand)" -> "[root] module.network (expand)"
		"[root] module.network.var.vpc_cidr (expand)" -> "[root] random_integer.cidr (expand)"
		"[root] module.network.var.vpc_name (expand)" -> "[root] local.name_prefix (expand)"
		"[root] module.network.var.vpc_name (expand)" -> "[root] module.network (expand)"
		"[root] module.rds (close)" -> "[root] module.rds.output.endpoint (expand)"
		"[root] module.rds (close)" -> "[root] module.rds.output.password (expand)"
		"[root] module.rds (close)" -> "[root] module.rds.output.username (expand)"
		"[root] module.rds (expand)" -> "[root] local.create_rds (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.aws_db_subnet_group.this (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.aws_security_group.this (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.var.allocated_storage (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.var.backup_retention (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.var.db_name (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.var.deletion_protection (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.var.engine_version (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.var.instance_class (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.var.multi_az (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.var.password (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.var.skip_final_snapshot (expand)"
		"[root] module.rds.aws_db_instance.this (expand)" -> "[root] module.rds.var.username (expand)"
		"[root] module.rds.aws_db_subnet_group.this (expand)" -> "[root] module.rds.var.identifier (expand)"
		"[root] module.rds.aws_db_subnet_group.this (expand)" -> "[root] module.rds.var.subnet_ids (expand)"
		"[root] module.rds.aws_db_subnet_group.this (expand)" -> "[root] module.rds.var.tags (expand)"
		"[root] module.rds.aws_security_group.this (expand)" -> "[root] module.rds.var.allowed_security_group_ids (expand)"
		"[root] module.rds.aws_security_group.this (expand)" -> "[root] module.rds.var.identifier (expand)"
		"[root] module.rds.aws_security_group.this (expand)" -> "[root] module.rds.var.tags (expand)"
		"[root] module.rds.aws_security_group.this (expand)" -> "[root] module.rds.var.vpc_id (expand)"
		"[root] module.rds.output.endpoint (expand)" -> "[root] module.rds.aws_db_instance.this (expand)"
		"[root] module.rds.output.password (expand)" -> "[root] module.rds.var.password (expand)"
		"[root] module.rds.output.username (expand)" -> "[root] module.rds.var.username (expand)"
		"[root] module.rds.var.allocated_storage (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.allowed_security_group_ids (expand)" -> "[root] module.compute.output.security_group_id (expand)"
		"[root] module.rds.var.allowed_security_group_ids (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.backup_retention (expand)" -> "[root] local.is_prod (expand)"
		"[root] module.rds.var.backup_retention (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.db_name (expand)" -> "[root] local.client_lower (expand)"
		"[root] module.rds.var.db_name (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.deletion_protection (expand)" -> "[root] local.is_prod (expand)"
		"[root] module.rds.var.deletion_protection (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.engine_version (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.identifier (expand)" -> "[root] local.name_prefix (expand)"
		"[root] module.rds.var.identifier (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.instance_class (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.multi_az (expand)" -> "[root] local.is_prod (expand)"
		"[root] module.rds.var.multi_az (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.password (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.password (expand)" -> "[root] random_password.rds (expand)"
		"[root] module.rds.var.skip_final_snapshot (expand)" -> "[root] local.is_prod (expand)"
		"[root] module.rds.var.skip_final_snapshot (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.subnet_ids (expand)" -> "[root] module.network.output.private_subnet_ids (expand)"
		"[root] module.rds.var.subnet_ids (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.tags (expand)" -> "[root] local.base_tags (expand)"
		"[root] module.rds.var.tags (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.username (expand)" -> "[root] module.rds (expand)"
		"[root] module.rds.var.vpc_id (expand)" -> "[root] module.network.output.vpc_id (expand)"
		"[root] module.rds.var.vpc_id (expand)" -> "[root] module.rds (expand)"
		"[root] output.api_endpoint (expand)" -> "[root] module.alb.output.lb_dns_name (expand)"
		"[root] output.api_endpoint (expand)" -> "[root] var.saas_api_lb_dns_name"
		"[root] output.documentdb_uri (expand)" -> "[root] module.docdb.output.connection_uri (expand)"
		"[root] output.documentdb_uri (expand)" -> "[root] var.saas_documentdb_uri"
		"[root] output.frontend_distribution_id (expand)" -> "[root] module.frontend.output.distribution_id (expand)"
		"[root] output.frontend_url (expand)" -> "[root] module.frontend.output.domain_name (expand)"
		"[root] output.hosted_zone_id (expand)" -> "[root] data.aws_route53_zone.primary (expand)"
		"[root] output.postgresql_endpoint (expand)" -> "[root] module.rds.output.endpoint (expand)"
		"[root] output.postgresql_endpoint (expand)" -> "[root] var.saas_rds_endpoint"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route53_record.api (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route53_record.frontend (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_secretsmanager_secret_version.docdb (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_secretsmanager_secret_version.rds (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.compute.aws_ecs_service.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.compute.aws_iam_role_policy.secrets_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.compute.aws_iam_role_policy_attachment.exec_default (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.compute.data.aws_iam_policy_document.logging (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.docdb.aws_docdb_cluster_instance.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.frontend.aws_s3_bucket_policy.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.frontend.aws_s3_bucket_public_access_block.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.network.aws_route.private_nat (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.network.aws_route.public_internet (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.network.aws_route_table_association.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.network.aws_route_table_association.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.network.aws_vpc_endpoint.interface (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.network.aws_vpc_endpoint.s3 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.aws_region"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].us_east_1 (close)" -> "[root] module.frontend.aws_acm_certificate_validation.frontend (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] random_integer.cidr (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] random_password.docdb (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] random_password.rds (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] random_string.bucket_suffix (expand)"
		"[root] random_integer.cidr (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] random_password.docdb (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] random_password.rds (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] random_string.bucket_suffix (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] root" -> "[root] local.fqdn (expand)"
		"[root] root" -> "[root] module.compute (close)"
		"[root] root" -> "[root] module.docdb (close)"
		"[root] root" -> "[root] module.frontend (close)"
		"[root] root" -> "[root] module.network (close)"
		"[root] root" -> "[root] module.rds (close)"
		"[root] root" -> "[root] output.api_endpoint (expand)"
		"[root] root" -> "[root] output.documentdb_uri (expand)"
		"[root] root" -> "[root] output.frontend_distribution_id (expand)"
		"[root] root" -> "[root] output.frontend_url (expand)"
		"[root] root" -> "[root] output.hosted_zone_id (expand)"
		"[root] root" -> "[root] output.postgresql_endpoint (expand)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].us_east_1 (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)"
		"[root] var.env (validation)" -> "[root] var.env"
		"[root] var.plan (validation)" -> "[root] var.plan"
	}
}
